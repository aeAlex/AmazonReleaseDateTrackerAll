server {
    listen 80;
    listen [::]:80;
    server_name einsoftdev.com www.einsoftdev.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Temporarily disable HTTPS redirect
    # location / {
    #     return 301 https://$host$request_uri;
    # }

    # Docker nginx reverse proxy proxy_pass entries
    location /sample {
        proxy_pass https://memes.com/;
    }

    location /AmazonReleaseDateTracker {
        proxy_pass http://ardt_frontend:8002;
    }

    location / {
        proxy_pass http://my_personal_website:8003;
    }

    location /AmazonReleaseDateTracker/api {
        proxy_pass http://ardt_backend:8001/AmazonReleaseDateTracker/api;
        add_header 'Access-Control-Allow-Origin' 'http://www.einsoftdev.com';
        add_header 'Access-Control-Allow-Origin' 'https://www.einsoftdev.com';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# Temporarily comment out the entire HTTPS server block
# server {
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     server_name einsoftdev.com www.einsoftdev.com;
#
#     # ... (rest of the HTTPS configuration) ...
# }
