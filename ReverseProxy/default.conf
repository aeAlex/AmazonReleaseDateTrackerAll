server {
    listen 80;
    listen [::]:80;
    server_name einsoftdev.com www.einsoftdev.com;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name einsoftdev.com www.einsoftdev.com;

    ssl_certificate /etc/letsencrypt/live/einsoftdev.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/einsoftdev.com/privkey.pem;

    # Improve SSL configuration (optional but recommended)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    # Docker nginx reverse proxy proxy_pass entries
    location /sample {
        proxy_pass https://memes.com/;
    }

    location /AmazonReleaseDateTracker {
        proxy_pass http://ardt_frontend:8002;
    }

    location / {
        proxy_pass http://my_personal_website:8003;
    }

    location /AmazonReleaseDateTracker/api {
        proxy_pass http://ardt_backend:8001/AmazonReleaseDateTracker/api;
        add_header 'Access-Control-Allow-Origin' 'https://www.einsoftdev.com';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
